/*draw region box and send request for range query and hilight result*/
L.Control.ZoomBox = L.Control.extend({
    _active: false,
    _map: null,
    includes: L.Mixin.Events,
    options: {
        position: 'topleft',
        className: 'leaflet-zoom-box-icon',
        modal: false,
        title: "Zoom to specific area"
    },
    onAdd: function (map) {
        this._map = map;
        this._container = L.DomUtil.create('div', 'leaflet-zoom-box-control leaflet-bar');
        this._container.title = this.options.title;
        url = "parks/within?lat1=";
        var link = L.DomUtil.create('a', this.options.className, this._container);
        link.href = "#";
        features = {};
        features["road"] = {};
        features["building"] = {};
        // Bind to the map's boxZoom handler
        var _origMouseDown = map.boxZoom._onMouseDown;
        map.boxZoom._onMouseDown = function(e){
            if (e.button === 2) return;  // prevent right-click from triggering zoom box
            //console.log(L.CRS.EPSG3857.pointToLatLng(L.point(e.clientX, e.clientY),map._zoom));
            //console.log(map.mouseEventToLatLng(map._onMouseClick));
            //L.DomEvent.addEventListener(document,'click',map._onMouseClick);
            var latlng = map.mouseEventToLatLng(e);
            url += latlng.lat + "&lon1=" + latlng.lng;
            console.log(latlng.lat + ', ' + latlng.lng);
            _origMouseDown.call(map.boxZoom, {
                clientX: e.clientX,
                clientY: e.clientY,
                which: 1,
                shiftKey: true
            });
            
        };
        function pinTheMap(data){
            //console.log(data);
            for(var i = 0;i < data.length;i++) {
                var id = data[i].id;
                if(features['road'][id] != undefined) {
                    features['road'][id].setStyle({color: '#FFFC00'});
                }
                else if(features['building'][id] != undefined) {
                    features['building'][id].setStyle({color: '#FFFC00'});
                }
            }
            /*var f = features[type];
            for(var i in f){
                f[i].setStyle({color: '#FFFC00'});
            }*/
            
        }
        map.boxZoom._onMouseUp = function(e){
            var latlng = map.mouseEventToLatLng(e);
            //console.log(map);
            url += "&lat2=" + latlng.lat + "&lon2=" + latlng.lng;
            console.log(latlng.lat + ', ' + latlng.lng);
            map.boxZoom._pane.removeChild(map.boxZoom._box);
            map.boxZoom._container.style.cursor = '';
            L.DomUtil.enableTextSelection();
            L.DomEvent
            .removeListener(document, 'mousemove', map.boxZoom._onMouseMove)
            .removeListener(document, 'mouseup', map.boxZoom._onMouseUp);
            $.get(url, pinTheMap, "json")
            url = "parks/within?lat1=";
        }
        map.on('zoomend', function(){

            if (map.getZoom() == map.getMaxZoom()){
                L.DomUtil.addClass(link, 'leaflet-disabled');
            }
            else {
                L.DomUtil.removeClass(link, 'leaflet-disabled');
            }
        }, this);
        if (!this.options.modal) {
            map.on('boxzoomend', this.deactivate, this);
        }

        L.DomEvent
            .on(this._container, 'dblclick', L.DomEvent.stop)
            .on(this._container, 'click', L.DomEvent.stop)
            .on(this._container, 'mousedown', L.DomEvent.stopPropagation)
            .on(this._container, 'click', function(){
                this._active = !this._active;
                if (this._active && map.getZoom() != map.getMaxZoom()){
                    this.activate();
                }
                else {
                    this.deactivate();
                }
               // console.log(e.latlng);
            }, this);
        return this._container;
    },
    activate: function() {
        L.DomUtil.addClass(this._container, 'active');
        this._map.dragging.disable();
        this._map.boxZoom.addHooks();
        L.DomUtil.addClass(this._map.getContainer(), 'leaflet-zoom-box-crosshair');
    },
    deactivate: function() {
        L.DomUtil.removeClass(this._container, 'active');
        this._map.dragging.enable();
        this._map.boxZoom.removeHooks();
        L.DomUtil.removeClass(this._map.getContainer(), 'leaflet-zoom-box-crosshair');
        this._active = false;
    }
});

L.control.zoomBox = function (options) {
  return new L.Control.ZoomBox(options);
};